{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"goerli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"linkReferences": {},
			"object": "",
			"opcodes": "",
			"sourceMap": ""
		},
		"deployedBytecode": {
			"functionDebugData": {},
			"generatedSources": [],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "",
			"opcodes": "",
			"sourceMap": ""
		},
		"gasEstimates": null,
		"methodIdentifiers": {
			"addCollectionAdminCross((address,uint256))": "859aa7d6",
			"addToCollectionAllowListCross((address,uint256))": "a0184a3a",
			"allowlistedCross((address,uint256))": "91b6df49",
			"changeCollectionOwnerCross((address,uint256))": "6496c497",
			"collectionAdmins()": "5813216b",
			"collectionLimits()": "f63bc572",
			"collectionNestingPermissions()": "5b2eaf4b",
			"collectionNestingRestrictedCollectionIds()": "22d25bfe",
			"collectionOwner()": "df727d3b",
			"collectionProperties(string[])": "285fb8e6",
			"collectionProperty(string)": "cf24fd6d",
			"collectionSponsor()": "6ec0a9f1",
			"confirmCollectionSponsorship()": "3c50e97a",
			"contractAddress()": "f6b4dfb4",
			"deleteCollectionProperties(string[])": "ee206ee3",
			"hasCollectionPendingSponsor()": "058ac185",
			"isOwnerOrAdminCross((address,uint256))": "3e75a905",
			"removeCollectionAdminCross((address,uint256))": "6c0cd173",
			"removeCollectionSponsor()": "6e0326a3",
			"removeFromCollectionAllowListCross((address,uint256))": "09ba452a",
			"setCollectionAccess(uint8)": "41835d4c",
			"setCollectionLimit((uint8,(bool,uint256)))": "2316ee74",
			"setCollectionMintMode(bool)": "00018e84",
			"setCollectionNesting(bool)": "112d4586",
			"setCollectionNesting(bool,address[])": "64872396",
			"setCollectionProperties((string,bytes)[])": "50b26b2a",
			"setCollectionSponsorCross((address,uint256))": "84a1d5a8",
			"supportsInterface(bytes4)": "01ffc9a7",
			"uniqueCollectionType()": "d34b55b8"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "address",
							"name": "eth",
							"type": "address"
						},
						{
							"internalType": "uint256",
							"name": "sub",
							"type": "uint256"
						}
					],
					"internalType": "struct CrossAddress",
					"name": "newAdmin",
					"type": "tuple"
				}
			],
			"name": "addCollectionAdminCross",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "address",
							"name": "eth",
							"type": "address"
						},
						{
							"internalType": "uint256",
							"name": "sub",
							"type": "uint256"
						}
					],
					"internalType": "struct CrossAddress",
					"name": "user",
					"type": "tuple"
				}
			],
			"name": "addToCollectionAllowListCross",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "address",
							"name": "eth",
							"type": "address"
						},
						{
							"internalType": "uint256",
							"name": "sub",
							"type": "uint256"
						}
					],
					"internalType": "struct CrossAddress",
					"name": "user",
					"type": "tuple"
				}
			],
			"name": "allowlistedCross",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "address",
							"name": "eth",
							"type": "address"
						},
						{
							"internalType": "uint256",
							"name": "sub",
							"type": "uint256"
						}
					],
					"internalType": "struct CrossAddress",
					"name": "newOwner",
					"type": "tuple"
				}
			],
			"name": "changeCollectionOwnerCross",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "collectionAdmins",
			"outputs": [
				{
					"components": [
						{
							"internalType": "address",
							"name": "eth",
							"type": "address"
						},
						{
							"internalType": "uint256",
							"name": "sub",
							"type": "uint256"
						}
					],
					"internalType": "struct CrossAddress[]",
					"name": "",
					"type": "tuple[]"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "collectionLimits",
			"outputs": [
				{
					"components": [
						{
							"internalType": "enum CollectionLimitField",
							"name": "field",
							"type": "uint8"
						},
						{
							"components": [
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"internalType": "struct OptionUint256",
							"name": "value",
							"type": "tuple"
						}
					],
					"internalType": "struct CollectionLimit[]",
					"name": "",
					"type": "tuple[]"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "collectionNestingPermissions",
			"outputs": [
				{
					"components": [
						{
							"internalType": "enum CollectionPermissionField",
							"name": "field",
							"type": "uint8"
						},
						{
							"internalType": "bool",
							"name": "value",
							"type": "bool"
						}
					],
					"internalType": "struct CollectionNestingPermission[]",
					"name": "",
					"type": "tuple[]"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "collectionNestingRestrictedCollectionIds",
			"outputs": [
				{
					"components": [
						{
							"internalType": "bool",
							"name": "token_owner",
							"type": "bool"
						},
						{
							"internalType": "uint256[]",
							"name": "ids",
							"type": "uint256[]"
						}
					],
					"internalType": "struct CollectionNesting",
					"name": "",
					"type": "tuple"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "collectionOwner",
			"outputs": [
				{
					"components": [
						{
							"internalType": "address",
							"name": "eth",
							"type": "address"
						},
						{
							"internalType": "uint256",
							"name": "sub",
							"type": "uint256"
						}
					],
					"internalType": "struct CrossAddress",
					"name": "",
					"type": "tuple"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "string[]",
					"name": "keys",
					"type": "string[]"
				}
			],
			"name": "collectionProperties",
			"outputs": [
				{
					"components": [
						{
							"internalType": "string",
							"name": "key",
							"type": "string"
						},
						{
							"internalType": "bytes",
							"name": "value",
							"type": "bytes"
						}
					],
					"internalType": "struct Property[]",
					"name": "",
					"type": "tuple[]"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "string",
					"name": "key",
					"type": "string"
				}
			],
			"name": "collectionProperty",
			"outputs": [
				{
					"internalType": "bytes",
					"name": "",
					"type": "bytes"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "collectionSponsor",
			"outputs": [
				{
					"components": [
						{
							"internalType": "address",
							"name": "eth",
							"type": "address"
						},
						{
							"internalType": "uint256",
							"name": "sub",
							"type": "uint256"
						}
					],
					"internalType": "struct CrossAddress",
					"name": "",
					"type": "tuple"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "confirmCollectionSponsorship",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "contractAddress",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "string[]",
					"name": "keys",
					"type": "string[]"
				}
			],
			"name": "deleteCollectionProperties",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "hasCollectionPendingSponsor",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "address",
							"name": "eth",
							"type": "address"
						},
						{
							"internalType": "uint256",
							"name": "sub",
							"type": "uint256"
						}
					],
					"internalType": "struct CrossAddress",
					"name": "user",
					"type": "tuple"
				}
			],
			"name": "isOwnerOrAdminCross",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "address",
							"name": "eth",
							"type": "address"
						},
						{
							"internalType": "uint256",
							"name": "sub",
							"type": "uint256"
						}
					],
					"internalType": "struct CrossAddress",
					"name": "admin",
					"type": "tuple"
				}
			],
			"name": "removeCollectionAdminCross",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "removeCollectionSponsor",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "address",
							"name": "eth",
							"type": "address"
						},
						{
							"internalType": "uint256",
							"name": "sub",
							"type": "uint256"
						}
					],
					"internalType": "struct CrossAddress",
					"name": "user",
					"type": "tuple"
				}
			],
			"name": "removeFromCollectionAllowListCross",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "enum AccessMode",
					"name": "mode",
					"type": "uint8"
				}
			],
			"name": "setCollectionAccess",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "enum CollectionLimitField",
							"name": "field",
							"type": "uint8"
						},
						{
							"components": [
								{
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"internalType": "struct OptionUint256",
							"name": "value",
							"type": "tuple"
						}
					],
					"internalType": "struct CollectionLimit",
					"name": "limit",
					"type": "tuple"
				}
			],
			"name": "setCollectionLimit",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bool",
					"name": "mode",
					"type": "bool"
				}
			],
			"name": "setCollectionMintMode",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bool",
					"name": "enable",
					"type": "bool"
				}
			],
			"name": "setCollectionNesting",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bool",
					"name": "enable",
					"type": "bool"
				},
				{
					"internalType": "address[]",
					"name": "collections",
					"type": "address[]"
				}
			],
			"name": "setCollectionNesting",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "string",
							"name": "key",
							"type": "string"
						},
						{
							"internalType": "bytes",
							"name": "value",
							"type": "bytes"
						}
					],
					"internalType": "struct Property[]",
					"name": "properties",
					"type": "tuple[]"
				}
			],
			"name": "setCollectionProperties",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"components": [
						{
							"internalType": "address",
							"name": "eth",
							"type": "address"
						},
						{
							"internalType": "uint256",
							"name": "sub",
							"type": "uint256"
						}
					],
					"internalType": "struct CrossAddress",
					"name": "sponsor",
					"type": "tuple"
				}
			],
			"name": "setCollectionSponsorCross",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "bytes4",
					"name": "interfaceID",
					"type": "bytes4"
				}
			],
			"name": "supportsInterface",
			"outputs": [
				{
					"internalType": "bool",
					"name": "",
					"type": "bool"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "uniqueCollectionType",
			"outputs": [
				{
					"internalType": "string",
					"name": "",
					"type": "string"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}